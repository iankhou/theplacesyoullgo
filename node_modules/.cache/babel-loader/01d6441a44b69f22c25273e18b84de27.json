{"ast":null,"code":"var _jsxFileName = \"/Users/ikh/localdev/otpyg/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport WorldMap from './WorldMap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\nexport default function App() {\n  _s();\n\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.on('load', () => {\n      map.current.addSource('trees', {\n        type: 'geojson',\n        data: './trees.geojson'\n      }); // add heatmap layer here\n      // add circle layer here\n\n      map.current.addLayer({\n        id: 'trees-heat',\n        type: 'heatmap',\n        source: 'trees',\n        maxzoom: 14,\n        paint: {\n          // increase weight as diameter breast height increases\n          'heatmap-weight': {\n            // property: 'dbh',\n            type: 'exponential',\n            stops: [[1, 0], [500, 30]]\n          },\n          // increase intensity as zoom level increases\n          'heatmap-intensity': {\n            stops: [[11, 1], [15, 3]]\n          },\n          // assign color values be applied to points depending on their density\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(153,255,153,0)', 0.2, 'rgb(0,255,0)', 0.4, 'rgb(0,204,0)', 0.6, 'rgb(0,153,0)', 0.8, 'rgb(0,102,0)'],\n          // increase radius as zoom increases\n          'heatmap-radius': {\n            stops: [[11, 15], [15, 20]]\n          },\n          // decrease opacity to transition into the circle layer\n          'heatmap-opacity': {\n            default: 1,\n            stops: [[14, 1], [15, 0]]\n          }\n        }\n      }, 'waterway-label');\n      map.current.addLayer({\n        id: 'trees-point',\n        type: 'circle',\n        source: 'trees',\n        minzoom: 12,\n        paint: {\n          // increase the radius of the circle as the zoom level and dbh value increases\n          'circle-radius': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [[{\n              zoom: 15,\n              value: 1\n            }, 20], [{\n              zoom: 15,\n              value: 62\n            }, 40], [{\n              zoom: 22,\n              value: 1\n            }, 80], [{\n              zoom: 22,\n              value: 62\n            }, 200]]\n          },\n          'circle-color': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [[0, 'rgb(0,153,0)'], [10, 'rgb(0,153,0)'], [20, 'rgb(0,153,0)'], [30, 'rgb(0,153,0)'], [40, 'rgb(0,153,0)'], [50, 'rgb(0,153,0)'], [60, 'rgb(0,153,0)']]\n          },\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 2,\n          'circle-opacity': {\n            stops: [[50, 0], [50, 1]]\n          }\n        }\n      }, 'waterway-label');\n      map.current.on('click', 'trees-point', ({\n        features\n      }) => {\n        new mapboxgl.Popup().setLngLat(features[0].geometry.coordinates).setHTML(`<strong>DBH:</strong> ${features[0].properties.dbh}`).addTo(map.current);\n      });\n    });\n  });\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"58vxPkSpWiZgT1fmJUD8fuBGEiA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ikh/localdev/otpyg/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","WorldMap","accessToken","App","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","current","Map","container","style","center","on","addSource","type","data","addLayer","id","source","maxzoom","paint","stops","default","minzoom","property","value","features","Popup","setLngLat","geometry","coordinates","setHTML","properties","dbh","addTo","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport WorldMap from './WorldMap';\nimport './App.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\n\n\nexport default function App() {\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    \n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    \n    map.current.on('load', () => {\n      map.current.addSource('trees', {\n        type: 'geojson',\n        data: './trees.geojson'\n      });\n      // add heatmap layer here\n      // add circle layer here\n\n      map.current.addLayer(\n        {\n          id: 'trees-heat',\n          type: 'heatmap',\n          source: 'trees',\n          maxzoom: 14,\n          paint: {\n            // increase weight as diameter breast height increases\n            'heatmap-weight': {\n              // property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [1, 0],\n                [500, 30],\n              ]\n            },\n            // increase intensity as zoom level increases\n            'heatmap-intensity': {\n              stops: [\n                [11, 1],\n                [15, 3]\n              ]\n            },\n            // assign color values be applied to points depending on their density\n            'heatmap-color': [\n              'interpolate',\n              ['linear'],\n              ['heatmap-density'],\n              0,\n              'rgba(153,255,153,0)',\n              0.2,\n              'rgb(0,255,0)',\n              0.4,\n              'rgb(0,204,0)',\n              0.6,\n              'rgb(0,153,0)',\n              0.8,\n              'rgb(0,102,0)'\n            ],\n            // increase radius as zoom increases\n            'heatmap-radius': \n            {\n              stops: [\n                [11, 15],\n                [15, 20]\n              ]\n            },\n            // decrease opacity to transition into the circle layer\n            'heatmap-opacity': {\n              default: 1,\n              stops: [\n                [14, 1],\n                [15, 0]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.addLayer(\n        {\n          id: 'trees-point',\n          type: 'circle',\n          source: 'trees',\n          minzoom: 12,\n          paint: {\n            // increase the radius of the circle as the zoom level and dbh value increases\n            'circle-radius': \n            {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [{ zoom: 15, value: 1 }, 20],\n                [{ zoom: 15, value: 62 }, 40],\n                [{ zoom: 22, value: 1 }, 80],\n                [{ zoom: 22, value: 62 }, 200]\n              ]\n            },\n            'circle-color': {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [0, 'rgb(0,153,0)'],\n                [10, 'rgb(0,153,0)'],\n                [20, 'rgb(0,153,0)'],\n                [30, 'rgb(0,153,0)'],\n                [40, 'rgb(0,153,0)'],\n                [50, 'rgb(0,153,0)'],\n                [60, 'rgb(0,153,0)'],\n              ]\n            },\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 2,\n            'circle-opacity': {\n              stops: [\n                [50, 0],\n                [50, 1]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.on('click', 'trees-point', ({ features }) => {\n        new mapboxgl.Popup()\n          .setLngLat(features[0].geometry.coordinates)\n          .setHTML(`<strong>DBH:</strong> ${features[0].properties.dbh}`)\n          .addTo(map.current);\n      });\n    });\n\n    \n    \n    \n\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n\n\n  return (\n    <div>\n    <div className=\"sidebar\">\n    Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n    </div>\n    <div ref={mapContainer} className=\"map-container\" />\n    </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}