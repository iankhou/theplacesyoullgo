{"ast":null,"code":"var _jsxFileName = \"/Users/ikh/localdev/otpyg/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport Loading from './Loading';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\n\nfunction addPopup(el, coords) {\n  const placeholder = document.createElement('div');\n  ReactDOM.render(el, placeholder);\n  const marker = new MapboxGl.Popup().setDOMContent(placeholder).setLngLat(coords).addTo(map);\n}\n\nexport default function App() {\n  _s();\n\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [users, setUsers] = useState(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  useEffect(() => {\n    if (users) return;\n    axios.get('https://damp-waters-93180.herokuapp.com/https://script.google.com/macros/s/AKfycbyi1oQ4XTYnCbOKZ5bhIq3mGeTdWxPCAimE8iGzxfxjks8Oip2Z15hijysNxX84GVdALQ/exec', {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(resp => {\n      setUsers(resp.data); // set contains coordinates [long, lat]\n\n      const locCache = new Set();\n      const features = {};\n      resp.data.forEach(d => {\n        const long = d[\"Longitude\"];\n        const lat = d[\"Latitude\"]; // locCache.forEach(c => {\n        //   if ((long - c[0]) ^ 2 + (lat - c[1]) ^ 2 < 0.001) { \n        //   }\n        // });\n        // console.log({\n        //   weight: 200,\n        //   name: d['Name (First Last)'],\n        //   year: d['Year'],\n        //   major: d['Major(s)'],\n        //   activity: d['What will you be doing there (work, school, etc.)?']\n        // })\n\n        features[d['Email Address']] = {\n          type: \"Feature\",\n          properties: {\n            weight: 200,\n            name: d['Name (First Last)'],\n            year: d['Year'],\n            major: d['Major(s)'],\n            activity: d['What will you be doing there (work, school, etc.)?']\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: [d[\"Longitude\"], d[\"Latitude\"]]\n          }\n        };\n      });\n      const userCollection = {\n        type: \"FeatureCollection\",\n        features: Object.values(features)\n      };\n      if (map.current) return; // initialize map only once\n\n      map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [lng, lat],\n        zoom: zoom\n      });\n      map.current.on('load', () => {\n        map.current.addSource('users', {\n          type: 'geojson',\n          data: userCollection\n        });\n        map.current.addLayer({\n          id: 'users-heat',\n          type: 'heatmap',\n          source: 'users',\n          maxzoom: 14,\n          paint: {\n            // increase weight as diameter breast height increases\n            'heatmap-weight': {\n              type: 'exponential',\n              stops: [[1, 0], [500, 30]]\n            },\n            // increase intensity as zoom level increases\n            'heatmap-intensity': {\n              stops: [[11, 1], [15, 3]]\n            },\n            // assign color values be applied to points depending on their density\n            'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(255,153,153,0)', 0.2, 'rgb(255,0,0)', 0.4, 'rgb(204,0,0)', 0.6, 'rgb(153,0,0)', 0.8, 'rgb(102,0,0)'],\n            // increase radius as zoom increases\n            'heatmap-radius': {\n              stops: [[11, 15], [15, 20]]\n            },\n            // decrease opacity to transition into the circle layer\n            'heatmap-opacity': {\n              default: 1,\n              stops: [[14, 1], [15, 0]]\n            }\n          }\n        }, 'waterway-label');\n        map.current.addLayer({\n          id: 'users-point',\n          type: 'circle',\n          source: 'users',\n          minzoom: 12,\n          paint: {\n            // increase the radius of the circle as the zoom level and weight increases\n            'circle-radius': {\n              property: 'weight',\n              type: 'exponential',\n              stops: [[{\n                zoom: 15,\n                value: 1\n              }, 20], [{\n                zoom: 15,\n                value: 62\n              }, 40], [{\n                zoom: 22,\n                value: 1\n              }, 80], [{\n                zoom: 22,\n                value: 62\n              }, 200]]\n            },\n            'circle-color': {\n              property: 'weight',\n              type: 'exponential',\n              stops: [[0, 'rgb(153,0,0)'], [10, 'rgb(153,0,0)'], [20, 'rgb(153,0,0)'], [30, 'rgb(153,0,0)'], [40, 'rgb(153,0,0)'], [50, 'rgb(153,0,0)'], [60, 'rgb(153,0,0)']]\n            },\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 2,\n            'circle-opacity': {\n              stops: [[14, 0], [15, 1]]\n            }\n          }\n        }, 'waterway-label');\n        map.current.on('click', 'users-point', ({\n          features\n        }) => {\n          const {\n            name,\n            year,\n            major,\n            activity\n          } = features[0].properties;\n\n          const myComp = /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"$\", name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Year: $\", year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Major(s): $\", major]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"What I'm doing here: $\", activity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }, this);\n\n          addPopup(myComp, features[0].geometry.coordinates); // new mapboxgl.Popup()\n          //   .setLngLat(features[0].geometry.coordinates)\n          //   .setHTML(\n          //     `<div>\n          //       <h1>${name}<h1>\n          //       <p>Year: ${year}</p>\n          //       <p>Major(s): ${major}</p>\n          //       <p>What I'm doing here: ${activity}</p>\n          //     </div>`\n          //   )\n          //   .addTo(map.current);\n        });\n      });\n    });\n  });\n  useEffect(() => {\n    setIsLoading(false);\n  }, []);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"action_button\",\n        variant: \"outlined\",\n        href: \"https://forms.gle/PGtt9gLc54E8R4us5\",\n        children: \"add yourself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"W5CEggQYndxAeXccmwRVkpbTgV8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ikh/localdev/otpyg/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","axios","Button","Loading","accessToken","addPopup","el","coords","placeholder","document","createElement","ReactDOM","render","marker","MapboxGl","Popup","setDOMContent","setLngLat","addTo","map","App","mapContainer","users","setUsers","lng","setLng","lat","setLat","zoom","setZoom","isLoading","setIsLoading","current","on","getCenter","toFixed","getZoom","get","headers","then","resp","data","locCache","Set","features","forEach","d","long","type","properties","weight","name","year","major","activity","geometry","coordinates","userCollection","Object","values","Map","container","style","center","addSource","addLayer","id","source","maxzoom","paint","stops","default","minzoom","property","value","myComp"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport axios from 'axios'\nimport Button from '@mui/material/Button'\nimport Loading from './Loading';\nimport './App.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\n\nfunction addPopup(el, coords) {\n  const placeholder = document.createElement('div');\n  ReactDOM.render(el, placeholder);\n\n  const marker = new MapboxGl.Popup()\n                      .setDOMContent(placeholder)\n                      .setLngLat(coords)\n                      .addTo(map);\n}\n\nexport default function App() {\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [users, setUsers] = useState(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  useEffect(() => {\n    if (users) return;\n    axios.get('https://damp-waters-93180.herokuapp.com/https://script.google.com/macros/s/AKfycbyi1oQ4XTYnCbOKZ5bhIq3mGeTdWxPCAimE8iGzxfxjks8Oip2Z15hijysNxX84GVdALQ/exec', { headers: { 'Access-Control-Allow-Origin': '*' } })\n      .then((resp) => {\n        setUsers(resp.data)\n        \n        // set contains coordinates [long, lat]\n        const locCache = new Set()\n\n        const features = {}\n\n        resp.data.forEach((d) => {\n          const long = d[\"Longitude\"]\n          const lat = d[\"Latitude\"]\n\n          // locCache.forEach(c => {\n          //   if ((long - c[0]) ^ 2 + (lat - c[1]) ^ 2 < 0.001) { \n              \n          //   }\n          // });\n\n          // console.log({\n          //   weight: 200,\n          //   name: d['Name (First Last)'],\n          //   year: d['Year'],\n          //   major: d['Major(s)'],\n          //   activity: d['What will you be doing there (work, school, etc.)?']\n          // })\n\n\n          \n          features[d['Email Address']] =  {\n            type: \"Feature\",\n            properties: {\n              weight: 200,\n              name: d['Name (First Last)'],\n              year: d['Year'],\n              major: d['Major(s)'],\n              activity: d['What will you be doing there (work, school, etc.)?']\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [\n                d[\"Longitude\"], d[\"Latitude\"]\n              ]\n            }\n          }\n        })\n\n        const userCollection = {\n          type: \"FeatureCollection\",\n          features: Object.values(features)\n        }\n\n        if (map.current) return; // initialize map only once\n    \n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    \n    map.current.on('load', () => {\n      map.current.addSource('users', {\n        type: 'geojson',\n        data: userCollection\n      });\n\n      map.current.addLayer(\n        {\n          id: 'users-heat',\n          type: 'heatmap',\n          source: 'users',\n          maxzoom: 14,\n          paint: {\n            // increase weight as diameter breast height increases\n            'heatmap-weight': {\n              type: 'exponential',\n              stops: [\n                [1, 0],\n                [500, 30],\n              ]\n            },\n            // increase intensity as zoom level increases\n            'heatmap-intensity': {\n              stops: [\n                [11, 1],\n                [15, 3]\n              ]\n            },\n            // assign color values be applied to points depending on their density\n            'heatmap-color': [\n              'interpolate',\n              ['linear'],\n              ['heatmap-density'],\n              0,\n              'rgba(255,153,153,0)',\n              0.2,\n              'rgb(255,0,0)',\n              0.4,\n              'rgb(204,0,0)',\n              0.6,\n              'rgb(153,0,0)',\n              0.8,\n              'rgb(102,0,0)'\n            ],\n            // increase radius as zoom increases\n            'heatmap-radius':\n            {\n              stops: [\n                [11, 15],\n                [15, 20]\n              ]\n            },\n            // decrease opacity to transition into the circle layer\n            'heatmap-opacity': {\n              default: 1,\n              stops: [\n                [14, 1],\n                [15, 0]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.addLayer(\n        {\n          id: 'users-point',\n          type: 'circle',\n          source: 'users',\n          minzoom: 12,\n          paint: {\n            // increase the radius of the circle as the zoom level and weight increases\n            'circle-radius':\n            {\n              property: 'weight',\n              type: 'exponential',\n              stops: [\n                [{ zoom: 15, value: 1 }, 20],\n                [{ zoom: 15, value: 62 }, 40],\n                [{ zoom: 22, value: 1 }, 80],\n                [{ zoom: 22, value: 62 }, 200]\n              ]\n            },\n            'circle-color': {\n              property: 'weight',\n              type: 'exponential',\n              stops: [\n                [0, 'rgb(153,0,0)'],\n                [10, 'rgb(153,0,0)'],\n                [20, 'rgb(153,0,0)'],\n                [30, 'rgb(153,0,0)'],\n                [40, 'rgb(153,0,0)'],\n                [50, 'rgb(153,0,0)'],\n                [60, 'rgb(153,0,0)'],\n              ]\n            },\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 2,\n            'circle-opacity': {\n              stops: [\n                [14, 0],\n                [15, 1]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.on('click', 'users-point', ({ features }) => {\n        const { name, year, major, activity } = features[0].properties;\n        const myComp = (\n          <div>\n            <h1>${name}</h1>\n            <p>Year: ${year}</p>\n            <p>Major(s): ${major}</p>\n            <p>What I'm doing here: ${activity}</p>\n          </div>\n        )\n        \n        addPopup(myComp, features[0].geometry.coordinates)\n        // new mapboxgl.Popup()\n        //   .setLngLat(features[0].geometry.coordinates)\n        //   .setHTML(\n        //     `<div>\n        //       <h1>${name}<h1>\n        //       <p>Year: ${year}</p>\n        //       <p>Major(s): ${major}</p>\n        //       <p>What I'm doing here: ${activity}</p>\n        //     </div>`\n        //   )\n        //   .addTo(map.current);\n      });\n    });\n\n      })\n  });\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  return isLoading ? <Loading />: (\n    <div>\n      <div className=\"sidebar\">\n        <p>Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}</p>\n        <Button className=\"action_button\" variant=\"outlined\" href=\"https://forms.gle/PGtt9gLc54E8R4us5\">\n    add yourself\n  </Button>\n      </div>\n      \n      <div ref={mapContainer} className=\"map-container\" />\n      \n    </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}