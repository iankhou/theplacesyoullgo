{"ast":null,"code":"var _jsxFileName = \"/Users/ikh/localdev/otpyg/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport WorldMap from './WorldMap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\nexport default function App() {\n  _s();\n\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-70.9);\n  const [lat, setLat] = useState(42.35);\n  const [zoom, setZoom] = useState(9);\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n  });\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ulylkujH/JHbtgg1wgYh3sZy06Q=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ikh/localdev/otpyg/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","WorldMap","accessToken","App","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","current","Map","container","style","center","on","getCenter","toFixed","getZoom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;AACnC,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;;AAEAD,QAAQ,CAACE,WAAT,GAAuB,2FAAvB;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAMC,YAAY,GAAGP,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMQ,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAC,IAAF,CAA9B;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AAEMD,EAAAA,SAAS,CAAC,MAAM;AACpB,QAAIO,GAAG,CAACO,OAAR,EAAiB,OADG,CACK;;AACzBP,IAAAA,GAAG,CAACO,OAAJ,GAAc,IAAIZ,QAAQ,CAACa,GAAb,CAAiB;AAC/BC,MAAAA,SAAS,EAAEV,YAAY,CAACQ,OADO;AAE/BG,MAAAA,KAAK,EAAE,oCAFwB;AAG/BC,MAAAA,MAAM,EAAE,CAACV,GAAD,EAAME,GAAN,CAHuB;AAI/BE,MAAAA,IAAI,EAAEA;AAJyB,KAAjB,CAAd;AAMC,GARY,CAAT;AAUNZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,GAAG,CAACO,OAAT,EAAkB,OADJ,CACY;;AAC1BP,IAAAA,GAAG,CAACO,OAAJ,CAAYK,EAAZ,CAAe,MAAf,EAAuB,MAAM;AAC7BV,MAAAA,MAAM,CAACF,GAAG,CAACO,OAAJ,CAAYM,SAAZ,GAAwBZ,GAAxB,CAA4Ba,OAA5B,CAAoC,CAApC,CAAD,CAAN;AACAV,MAAAA,MAAM,CAACJ,GAAG,CAACO,OAAJ,CAAYM,SAAZ,GAAwBV,GAAxB,CAA4BW,OAA5B,CAAoC,CAApC,CAAD,CAAN;AACAR,MAAAA,OAAO,CAACN,GAAG,CAACO,OAAJ,CAAYQ,OAAZ,GAAsBD,OAAtB,CAA8B,CAA9B,CAAD,CAAP;AACC,KAJD;AAKC,GAPM,CAAT;AAWA,sBACE;AAAA,2BACA;AAAK,MAAA,GAAG,EAAEf,YAAV;AAAwB,MAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApCuBD,G;;KAAAA,G","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport WorldMap from './WorldMap';\nimport './App.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\n\n\nexport default function App() {\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-70.9);\n  const [lat, setLat] = useState(42.35);\n  const [zoom, setZoom] = useState(9);\n\n        useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n    container: mapContainer.current,\n    style: 'mapbox://styles/mapbox/streets-v11',\n    center: [lng, lat],\n    zoom: zoom\n    });\n    });\n  \n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n    setLng(map.current.getCenter().lng.toFixed(4));\n    setLat(map.current.getCenter().lat.toFixed(4));\n    setZoom(map.current.getZoom().toFixed(2));\n    });\n    });\n\n\n\n  return (\n    <div>\n    <div ref={mapContainer} className=\"map-container\" />\n    </div>\n  );\n\n  \n}"]},"metadata":{},"sourceType":"module"}