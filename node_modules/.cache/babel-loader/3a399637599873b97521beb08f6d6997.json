{"ast":null,"code":"import _slicedToArray from\"/Users/ikh/localdev/otpyg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from'react';import mapboxgl from'!mapbox-gl';// eslint-disable-line import/no-webpack-loader-syntax\nimport axios from'axios';import WorldMap from'./WorldMap';import'./App.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";mapboxgl.accessToken='pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';export default function App(){// update users from Google Sheet\nvar mapContainer=useRef(null);var map=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState(-98.08226562598172),_useState4=_slicedToArray(_useState3,2),lng=_useState4[0],setLng=_useState4[1];var _useState5=useState(39.67197697791948),_useState6=_slicedToArray(_useState5,2),lat=_useState6[0],setLat=_useState6[1];var _useState7=useState(3),_useState8=_slicedToArray(_useState7,2),zoom=_useState8[0],setZoom=_useState8[1];useEffect(function(){if(users)return;axios.get('https://script.google.com/macros/s/AKfycbwP6M-WXhXW-tpr3gq0M9vXZ5Lsk2VN4-GyXy1o-VTPVEou0LGhaDvAYAknQOOXAgYUBw/exec').then(function(resp){console.log(resp.data);setUsers(resp.data);});});useEffect(function(){if(map.current)return;// initialize map only once\nmap.current=new mapboxgl.Map({container:mapContainer.current,style:'mapbox://styles/mapbox/streets-v11',center:[lng,lat],zoom:zoom});map.current.on('load',function(){map.current.addSource('trees',{type:'geojson',data:'./trees.geojson'});// add heatmap layer here\n// add circle layer here\nmap.current.addLayer({id:'trees-heat',type:'heatmap',source:'trees',maxzoom:14,paint:{// increase weight as diameter breast height increases\n'heatmap-weight':{// property: 'dbh',\ntype:'exponential',stops:[[1,0],[500,30]]},// increase intensity as zoom level increases\n'heatmap-intensity':{stops:[[11,1],[15,3]]},// assign color values be applied to points depending on their density\n'heatmap-color':['interpolate',['linear'],['heatmap-density'],0,'rgba(153,255,153,0)',0.2,'rgb(0,255,0)',0.4,'rgb(0,204,0)',0.6,'rgb(0,153,0)',0.8,'rgb(0,102,0)'],// increase radius as zoom increases\n'heatmap-radius':{stops:[[11,15],[15,20]]},// decrease opacity to transition into the circle layer\n'heatmap-opacity':{default:1,stops:[[14,1],[15,0]]}}},'waterway-label');map.current.addLayer({id:'trees-point',type:'circle',source:'trees',minzoom:12,paint:{// increase the radius of the circle as the zoom level and dbh value increases\n'circle-radius':{property:'dbh',type:'exponential',stops:[[{zoom:15,value:1},20],[{zoom:15,value:62},40],[{zoom:22,value:1},80],[{zoom:22,value:62},200]]},'circle-color':{property:'dbh',type:'exponential',stops:[[0,'rgb(0,153,0)'],[10,'rgb(0,153,0)'],[20,'rgb(0,153,0)'],[30,'rgb(0,153,0)'],[40,'rgb(0,153,0)'],[50,'rgb(0,153,0)'],[60,'rgb(0,153,0)']]},'circle-stroke-color':'white','circle-stroke-width':2,'circle-opacity':{stops:[[14,0],[15,1]]}}},'waterway-label');map.current.on('click','trees-point',function(_ref){var features=_ref.features;new mapboxgl.Popup().setLngLat(features[0].geometry.coordinates).setHTML(// `<strong>DBH:</strong> ${features[0].properties.dbh}, ${features[0].properties.major}`\n\"<div>\\n              <h1>Ian Hou<h1>\\n              <p>Major(s): </p>\\n            </div>\").addTo(map.current);});});});useEffect(function(){if(!map.current)return;// wait for map to initialize\nmap.current.on('move',function(){setLng(map.current.getCenter().lng.toFixed(4));setLat(map.current.getCenter().lat.toFixed(4));setZoom(map.current.getZoom().toFixed(2));});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[\"Longitude: \",lng,\" | Latitude: \",lat,\" | Zoom: \",zoom]}),/*#__PURE__*/_jsx(\"div\",{ref:mapContainer,className:\"map-container\"})]});}","map":{"version":3,"sources":["/Users/ikh/localdev/otpyg/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","axios","WorldMap","accessToken","App","mapContainer","map","users","setUsers","lng","setLng","lat","setLat","zoom","setZoom","get","then","resp","console","log","data","current","Map","container","style","center","on","addSource","type","addLayer","id","source","maxzoom","paint","stops","default","minzoom","property","value","features","Popup","setLngLat","geometry","coordinates","setHTML","addTo","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport axios from 'axios'\nimport WorldMap from './WorldMap';\nimport './App.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\n\n\nexport default function App() {\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [users, setUsers] = useState(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n\n  useEffect(() => {\n    if (users) return;\n    axios.get('https://script.google.com/macros/s/AKfycbwP6M-WXhXW-tpr3gq0M9vXZ5Lsk2VN4-GyXy1o-VTPVEou0LGhaDvAYAknQOOXAgYUBw/exec')\n      .then((resp) => {\n        console.log(resp.data)\n        setUsers(resp.data)\n      })\n  })\n\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    \n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    \n    map.current.on('load', () => {\n      map.current.addSource('trees', {\n        type: 'geojson',\n        data: './trees.geojson'\n      });\n      // add heatmap layer here\n      // add circle layer here\n\n      map.current.addLayer(\n        {\n          id: 'trees-heat',\n          type: 'heatmap',\n          source: 'trees',\n          maxzoom: 14,\n          paint: {\n            // increase weight as diameter breast height increases\n            'heatmap-weight': {\n              // property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [1, 0],\n                [500, 30],\n              ]\n            },\n            // increase intensity as zoom level increases\n            'heatmap-intensity': {\n              stops: [\n                [11, 1],\n                [15, 3]\n              ]\n            },\n            // assign color values be applied to points depending on their density\n            'heatmap-color': [\n              'interpolate',\n              ['linear'],\n              ['heatmap-density'],\n              0,\n              'rgba(153,255,153,0)',\n              0.2,\n              'rgb(0,255,0)',\n              0.4,\n              'rgb(0,204,0)',\n              0.6,\n              'rgb(0,153,0)',\n              0.8,\n              'rgb(0,102,0)'\n            ],\n            // increase radius as zoom increases\n            'heatmap-radius':\n            {\n              stops: [\n                [11, 15],\n                [15, 20]\n              ]\n            },\n            // decrease opacity to transition into the circle layer\n            'heatmap-opacity': {\n              default: 1,\n              stops: [\n                [14, 1],\n                [15, 0]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.addLayer(\n        {\n          id: 'trees-point',\n          type: 'circle',\n          source: 'trees',\n          minzoom: 12,\n          paint: {\n            // increase the radius of the circle as the zoom level and dbh value increases\n            'circle-radius':\n            {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [{ zoom: 15, value: 1 }, 20],\n                [{ zoom: 15, value: 62 }, 40],\n                [{ zoom: 22, value: 1 }, 80],\n                [{ zoom: 22, value: 62 }, 200]\n              ]\n            },\n            'circle-color': {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [0, 'rgb(0,153,0)'],\n                [10, 'rgb(0,153,0)'],\n                [20, 'rgb(0,153,0)'],\n                [30, 'rgb(0,153,0)'],\n                [40, 'rgb(0,153,0)'],\n                [50, 'rgb(0,153,0)'],\n                [60, 'rgb(0,153,0)'],\n              ]\n            },\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 2,\n            'circle-opacity': {\n              stops: [\n                [14, 0],\n                [15, 1]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.on('click', 'trees-point', ({ features }) => {\n        new mapboxgl.Popup()\n          .setLngLat(features[0].geometry.coordinates)\n          .setHTML(\n            // `<strong>DBH:</strong> ${features[0].properties.dbh}, ${features[0].properties.major}`\n            `<div>\n              <h1>Ian Hou<h1>\n              <p>Major(s): </p>\n            </div>`\n          )\n          .addTo(map.current);\n      });\n    });\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n\n\n  return (\n    <div>\n    <div className=\"sidebar\">\n    Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n    </div>\n    <div ref={mapContainer} className=\"map-container\" />\n    </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}