{"ast":null,"code":"var _jsxFileName = \"/Users/ikh/localdev/otpyg/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n// import jQuery from 'jquery';\n\nimport axios from 'axios';\nimport Fab from '@mui/material/Fab';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\nexport default function App() {\n  _s();\n\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [users, setUsers] = useState(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  useEffect(() => {\n    if (users) return;\n    axios.get('https://damp-waters-93180.herokuapp.com/https://script.google.com/macros/s/AKfycbyi1oQ4XTYnCbOKZ5bhIq3mGeTdWxPCAimE8iGzxfxjks8Oip2Z15hijysNxX84GVdALQ/exec', {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(resp => {\n      console.log(resp.data);\n      setUsers(resp.data);\n      const features = resp.data.map(d => {\n        return {\n          type: \"Feature\",\n          properties: {\n            dbh: 200,\n            name: d['Name (First Last)'],\n            year: d['Year'],\n            major: d['Major(s)'],\n            activity: d['What will you be doing there (work, school, etc.)?']\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: [d[\"Longitude\"], d[\"Latitude\"]]\n          }\n        };\n      });\n      const featureCollection = {\n        type: \"FeatureCollection\",\n        features\n      };\n      if (map.current) return; // initialize map only once\n\n      map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [lng, lat],\n        zoom: zoom\n      });\n      map.current.on('load', () => {\n        map.current.addSource('trees', {\n          type: 'geojson',\n          // data: './trees.geojson'\n          data: featureCollection\n        }); // add heatmap layer here\n        // add circle layer here\n\n        map.current.addLayer({\n          id: 'trees-heat',\n          type: 'heatmap',\n          source: 'trees',\n          maxzoom: 14,\n          paint: {\n            // increase weight as diameter breast height increases\n            'heatmap-weight': {\n              // property: 'dbh',\n              type: 'exponential',\n              stops: [[1, 0], [500, 30]]\n            },\n            // increase intensity as zoom level increases\n            'heatmap-intensity': {\n              stops: [[11, 1], [15, 3]]\n            },\n            // assign color values be applied to points depending on their density\n            'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(153,255,153,0)', 0.2, 'rgb(0,255,0)', 0.4, 'rgb(0,204,0)', 0.6, 'rgb(0,153,0)', 0.8, 'rgb(0,102,0)'],\n            // increase radius as zoom increases\n            'heatmap-radius': {\n              stops: [[11, 15], [15, 20]]\n            },\n            // decrease opacity to transition into the circle layer\n            'heatmap-opacity': {\n              default: 1,\n              stops: [[14, 1], [15, 0]]\n            }\n          }\n        }, 'waterway-label');\n        map.current.addLayer({\n          id: 'trees-point',\n          type: 'circle',\n          source: 'trees',\n          minzoom: 12,\n          paint: {\n            // increase the radius of the circle as the zoom level and dbh value increases\n            'circle-radius': {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [[{\n                zoom: 15,\n                value: 1\n              }, 20], [{\n                zoom: 15,\n                value: 62\n              }, 40], [{\n                zoom: 22,\n                value: 1\n              }, 80], [{\n                zoom: 22,\n                value: 62\n              }, 200]]\n            },\n            'circle-color': {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [[0, 'rgb(0,153,0)'], [10, 'rgb(0,153,0)'], [20, 'rgb(0,153,0)'], [30, 'rgb(0,153,0)'], [40, 'rgb(0,153,0)'], [50, 'rgb(0,153,0)'], [60, 'rgb(0,153,0)']]\n            },\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 2,\n            'circle-opacity': {\n              stops: [[14, 0], [15, 1]]\n            }\n          }\n        }, 'waterway-label');\n        map.current.on('click', 'trees-point', ({\n          features\n        }) => {\n          const {\n            name,\n            year,\n            major,\n            activity\n          } = features[0].properties;\n          new mapboxgl.Popup().setLngLat(features[0].geometry.coordinates).setHTML(`<div>\n              <h1>${name}<h1>\n              <p>Year: ${year}</p>\n              <p>Major(s): ${major}</p>\n              <p>What I'm doing here: ${activity}</p>\n            </div>`).addTo(map.current);\n        });\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom, /*#__PURE__*/_jsxDEV(Fab, {\n        className: \"action_button\",\n        variant: \"extended\",\n        size: \"medium\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        children: \"Extended\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bNqI8zX4R32QMguP1LZPTgJqQ/I=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ikh/localdev/otpyg/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","axios","Fab","accessToken","App","mapContainer","map","users","setUsers","lng","setLng","lat","setLat","zoom","setZoom","current","on","getCenter","toFixed","getZoom","get","headers","then","resp","console","log","data","features","d","type","properties","dbh","name","year","major","activity","geometry","coordinates","featureCollection","Map","container","style","center","addSource","addLayer","id","source","maxzoom","paint","stops","default","minzoom","property","value","Popup","setLngLat","setHTML","addTo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n// import jQuery from 'jquery';\nimport axios from 'axios'\nimport Fab from '@mui/material/Fab'\nimport './App.css';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\n\n\nexport default function App() {\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [users, setUsers] = useState(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  useEffect(() => {\n    if (users) return;\n    axios.get('https://damp-waters-93180.herokuapp.com/https://script.google.com/macros/s/AKfycbyi1oQ4XTYnCbOKZ5bhIq3mGeTdWxPCAimE8iGzxfxjks8Oip2Z15hijysNxX84GVdALQ/exec', { headers: { 'Access-Control-Allow-Origin': '*' } })\n      .then((resp) => {\n        console.log(resp.data)\n        setUsers(resp.data)\n        const features = resp.data.map((d) => {\n          return {\n            type: \"Feature\",\n            properties: {\n              dbh: 200,\n              name: d['Name (First Last)'],\n              year: d['Year'],\n              major: d['Major(s)'],\n              activity: d['What will you be doing there (work, school, etc.)?']\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [\n                d[\"Longitude\"], d[\"Latitude\"]\n              ]\n            }\n          }\n        })\n        const featureCollection = {\n          type: \"FeatureCollection\",\n          features\n        }\n\n        if (map.current) return; // initialize map only once\n    \n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    \n    map.current.on('load', () => {\n      map.current.addSource('trees', {\n        type: 'geojson',\n        // data: './trees.geojson'\n        data: featureCollection\n      });\n      // add heatmap layer here\n      // add circle layer here\n\n      map.current.addLayer(\n        {\n          id: 'trees-heat',\n          type: 'heatmap',\n          source: 'trees',\n          maxzoom: 14,\n          paint: {\n            // increase weight as diameter breast height increases\n            'heatmap-weight': {\n              // property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [1, 0],\n                [500, 30],\n              ]\n            },\n            // increase intensity as zoom level increases\n            'heatmap-intensity': {\n              stops: [\n                [11, 1],\n                [15, 3]\n              ]\n            },\n            // assign color values be applied to points depending on their density\n            'heatmap-color': [\n              'interpolate',\n              ['linear'],\n              ['heatmap-density'],\n              0,\n              'rgba(153,255,153,0)',\n              0.2,\n              'rgb(0,255,0)',\n              0.4,\n              'rgb(0,204,0)',\n              0.6,\n              'rgb(0,153,0)',\n              0.8,\n              'rgb(0,102,0)'\n            ],\n            // increase radius as zoom increases\n            'heatmap-radius':\n            {\n              stops: [\n                [11, 15],\n                [15, 20]\n              ]\n            },\n            // decrease opacity to transition into the circle layer\n            'heatmap-opacity': {\n              default: 1,\n              stops: [\n                [14, 1],\n                [15, 0]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.addLayer(\n        {\n          id: 'trees-point',\n          type: 'circle',\n          source: 'trees',\n          minzoom: 12,\n          paint: {\n            // increase the radius of the circle as the zoom level and dbh value increases\n            'circle-radius':\n            {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [{ zoom: 15, value: 1 }, 20],\n                [{ zoom: 15, value: 62 }, 40],\n                [{ zoom: 22, value: 1 }, 80],\n                [{ zoom: 22, value: 62 }, 200]\n              ]\n            },\n            'circle-color': {\n              property: 'dbh',\n              type: 'exponential',\n              stops: [\n                [0, 'rgb(0,153,0)'],\n                [10, 'rgb(0,153,0)'],\n                [20, 'rgb(0,153,0)'],\n                [30, 'rgb(0,153,0)'],\n                [40, 'rgb(0,153,0)'],\n                [50, 'rgb(0,153,0)'],\n                [60, 'rgb(0,153,0)'],\n              ]\n            },\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 2,\n            'circle-opacity': {\n              stops: [\n                [14, 0],\n                [15, 1]\n              ]\n            }\n          }\n        },\n        'waterway-label'\n      );\n\n      map.current.on('click', 'trees-point', ({ features }) => {\n        const { name, year, major, activity } = features[0].properties;\n        new mapboxgl.Popup()\n          .setLngLat(features[0].geometry.coordinates)\n          .setHTML(\n            `<div>\n              <h1>${name}<h1>\n              <p>Year: ${year}</p>\n              <p>Major(s): ${major}</p>\n              <p>What I'm doing here: ${activity}</p>\n            </div>`\n          )\n          .addTo(map.current);\n      });\n    });\n\n      })\n\n  });\n\n\n\n\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        <Fab className=\"action_button\" variant=\"extended\" size=\"medium\" color=\"primary\" aria-label=\"add\">\n    Extended\n  </Fab>\n      </div>\n      \n      <div ref={mapContainer} className=\"map-container\" />\n      \n    </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}