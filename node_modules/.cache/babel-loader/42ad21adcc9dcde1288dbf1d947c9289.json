{"ast":null,"code":"var _jsxFileName = \"/Users/ikh/localdev/otpyg/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport WorldMap from './WorldMap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\nexport default function App() {\n  _s();\n\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.on('load', () => {\n      // Add a geojson point source.\n      // Heatmap layers also work with a vector tile source.\n      map.current.addSource('earthquakes', {\n        'type': 'geojson',\n        'data': 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'\n      });\n      map.current.addLayer({\n        'id': 'earthquakes-heat',\n        'type': 'heatmap',\n        'source': 'earthquakes',\n        'maxzoom': 9,\n        'paint': {\n          // Increase the heatmap weight based on frequency and property magnitude\n          'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n          // Increase the heatmap color weight weight by zoom level\n          // heatmap-intensity is a multiplier on top of heatmap-weight\n          'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n          // Begin color ramp at 0-stop with a 0-transparancy color\n          // to create a blur-like effect.\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.4, 'rgb(209,229,240)', 0.6, 'rgb(253,219,199)', 0.8, 'rgb(239,138,98)', 1, 'rgb(178,24,43)'],\n          // Adjust the heatmap radius by zoom level\n          'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n          // Transition from heatmap to circle layer by zoom level\n          'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n        }\n      }, 'waterway-label');\n      map.current.addLayer({\n        'id': 'earthquakes-point',\n        'type': 'circle',\n        'source': 'earthquakes',\n        'minzoom': 7,\n        'paint': {\n          // Size circle radius by earthquake magnitude and zoom level\n          'circle-radius': ['interpolate', ['linear'], ['zoom'], 7, ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4], 16, ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]],\n          // Color circle by earthquake magnitude\n          'circle-color': ['interpolate', ['linear'], ['get', 'mag'], 1, 'rgba(33,102,172,0)', 2, 'rgb(103,169,207)', 3, 'rgb(209,229,240)', 4, 'rgb(253,219,199)', 5, 'rgb(239,138,98)', 6, 'rgb(178,24,43)'],\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          // Transition from heatmap to circle layer by zoom level\n          'circle-opacity': ['interpolate', ['linear'], ['zoom'], 7, 0, 8, 1]\n        }\n      }, 'waterway-label');\n    });\n  });\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"58vxPkSpWiZgT1fmJUD8fuBGEiA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ikh/localdev/otpyg/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","WorldMap","accessToken","App","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","current","Map","container","style","center","on","addSource","addLayer","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport WorldMap from './WorldMap';\nimport './App.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWFua2hvdSIsImEiOiJja3U1enMzNHE0enN4Mm9waXNwcDlyeGVpIn0.gz1TKA2H5JfDkMiHkdVxRQ';\n\n\nexport default function App() {\n  // update users from Google Sheet\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-98.08226562598172);\n  const [lat, setLat] = useState(39.67197697791948);\n  const [zoom, setZoom] = useState(3);\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n      map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n      map.current.on('load', () => {\n        // Add a geojson point source.\n        // Heatmap layers also work with a vector tile source.\n        map.current.addSource('earthquakes', {\n          'type': 'geojson',\n          'data': 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'\n          });\n          map.current.addLayer(\n            {\n            'id': 'earthquakes-heat',\n            'type': 'heatmap',\n            'source': 'earthquakes',\n            'maxzoom': 9,\n            'paint': {\n            // Increase the heatmap weight based on frequency and property magnitude\n            'heatmap-weight': [\n            'interpolate',\n            ['linear'],\n            ['get', 'mag'],\n            0,\n            0,\n            6,\n            1\n            ],\n            // Increase the heatmap color weight weight by zoom level\n            // heatmap-intensity is a multiplier on top of heatmap-weight\n            'heatmap-intensity': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            0,\n            1,\n            9,\n            3\n            ],\n            // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n            // Begin color ramp at 0-stop with a 0-transparancy color\n            // to create a blur-like effect.\n            'heatmap-color': [\n            'interpolate',\n            ['linear'],\n            ['heatmap-density'],\n            0,\n            'rgba(33,102,172,0)',\n            0.2,\n            'rgb(103,169,207)',\n            0.4,\n            'rgb(209,229,240)',\n            0.6,\n            'rgb(253,219,199)',\n            0.8,\n            'rgb(239,138,98)',\n            1,\n            'rgb(178,24,43)'\n            ],\n            // Adjust the heatmap radius by zoom level\n            'heatmap-radius': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            0,\n            2,\n            9,\n            20\n            ],\n            // Transition from heatmap to circle layer by zoom level\n            'heatmap-opacity': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            7,\n            1,\n            9,\n            0\n            ]\n            }\n            },\n            'waterway-label'\n            );\n             \n            map.current.addLayer(\n            {\n            'id': 'earthquakes-point',\n            'type': 'circle',\n            'source': 'earthquakes',\n            'minzoom': 7,\n            'paint': {\n            // Size circle radius by earthquake magnitude and zoom level\n            'circle-radius': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            7,\n            ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4],\n            16,\n            ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]\n            ],\n            // Color circle by earthquake magnitude\n            'circle-color': [\n            'interpolate',\n            ['linear'],\n            ['get', 'mag'],\n            1,\n            'rgba(33,102,172,0)',\n            2,\n            'rgb(103,169,207)',\n            3,\n            'rgb(209,229,240)',\n            4,\n            'rgb(253,219,199)',\n            5,\n            'rgb(239,138,98)',\n            6,\n            'rgb(178,24,43)'\n            ],\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 1,\n            // Transition from heatmap to circle layer by zoom level\n            'circle-opacity': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            7,\n            0,\n            8,\n            1\n            ]\n            }\n            },\n            'waterway-label'\n            );\n      })\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n\n\n  return (\n    <div>\n    <div className=\"sidebar\">\n    Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n    </div>\n    <div ref={mapContainer} className=\"map-container\" />\n    </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}